{"version":3,"sources":["../webpack/bootstrap",".././src/Flows.ts",".././src/extension.ts",".././src/models/SnippetModel.ts","../external \"vscode\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AClFA,2DAAiC;AAEjC,wGAAqD;AAErD,MAAa,YAAY;IACrB,YAAoB,OAAgC;QAAhC,YAAO,GAAP,OAAO,CAAyB;QAChD,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,yBAAyB,EAAE,CAAC,CAAC,EAAE,EAAE;YACnF,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAE9C,IAAG,MAAM,KAAK,SAAS,EAAE;gBACrB,IAAI,OAAO,GAAG,IAAI,2BAAY,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxH,gCAAgC;gBAChC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAC1C,SAAS,EACT,qBAAqB,EACrB,MAAM,CAAC,UAAU,CAAC,GAAG,EACrB,EAAE,CACL,CAAC;aACL;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;CACJ;AAnBD,oCAmBC;;;;;;;;;;;;;;;ACnBD,sDAAsD;AACtD,qEAAuC;AAEvC,yDAAyD;AACzD,0EAA0E;AAC1E,SAAgB,QAAQ,CAAC,OAAgC;IACrD,8DAA8D;IAC9D,MAAM,YAAY,GAAG,IAAI,oBAAY,CAAC,OAAO,CAAC,CAAC;AACnD,CAAC;AAHD,4BAGC;AAED,2DAA2D;AAC3D,SAAgB,UAAU,KAAI,CAAC;AAA/B,gCAA+B;;;;;;;;;;;;;;;ACZ/B,MAAa,YAAY;IAKrB,YAAmB,KAAsB,EAAE,GAAoB,EAAE,IAAY;QACzE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CACJ;AAVD,oCAUC;;;;;;;;;;;;ACbD,mC","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","import * as vscode from 'vscode';\n\nimport { SnippetModel } from './models/SnippetModel';\n\nexport class FlowExplorer {\n    constructor(private context: vscode.ExtensionContext) {\n        const createSnippet = vscode.commands.registerCommand(\"extension.createSnippet\", (e) => {\n            const editor = vscode.window.activeTextEditor;\n\n            if(editor !== undefined) {\n                let snippet = new SnippetModel(editor.selection.start, editor.selection.end, editor.document.getText(editor.selection));\n                // open webview or focus webview\n                const panel = vscode.window.createWebviewPanel(\n                    'newFlow',\n                    'SwiftDocs: New Flow',\n                    vscode.ViewColumn.One,\n                    {}\n                );\n            }\n        });\n\n        context.subscriptions.push(createSnippet);\n    }\n}","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// import { CollectionExplorer } from './Collections';\nimport { FlowExplorer } from './Flows';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n    // const collectionExplorer = new CollectionExplorer(context);\n    const flowExplorer = new FlowExplorer(context);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","import * as vscode from 'vscode';\nimport { SnippetInterface } from '../interfaces/SnippetInterface';\n\nexport class SnippetModel implements SnippetInterface {\n    public start: vscode.Position;\n    public end: vscode.Position;\n    public text: string;\n\n    public constructor(start: vscode.Position, end: vscode.Position, text: string) {\n        this.start = start;\n        this.end = end;\n        this.text = text;\n    }\n}","module.exports = require(\"vscode\");"],"sourceRoot":""}